version: '3.8'

services:
  eureka-server:
    image: 573051981280.dkr.ecr.ap-south-1.amazonaws.com/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  api-gateway:
    image: 573051981280.dkr.ecr.ap-south-1.amazonaws.com/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - microservices-net

  auth-service:
    image: 573051981280.dkr.ecr.ap-south-1.amazonaws.com/auth-service:latest
    container_name: auth-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
    networks:
      - microservices-net

  product-service:
    image: 573051981280.dkr.ecr.ap-south-1.amazonaws.com/product-service:latest
    container_name: product-service
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - eureka-server
    environment:
      - DB_USERNAME=${{ secrets.DB_USERNAME }}
      - MYSQLPASS=${{ secrets.MYSQLPASS }}
      - EUREKA_HOST=eureka-server
    networks:
      - microservices-net

  order-service:
    image: 573051981280.dkr.ecr.ap-south-1.amazonaws.com/order-service:latest
    container_name: order-service
    ports:
      - "8083:8083"
    environment:
      - DB_USERNAME=${{ secrets.DB_USERNAME }}
      - MYSQLPASS=${{ secrets.MYSQLPASS }}
      - EUREKA_HOST=eureka-server
    depends_on:
      - eureka-server
      - mysql
    networks:
      - microservices-net


  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      - DB_USERNAME=${{ secrets.DB_USERNAME }}
      - MYSQLPASS=${{ secrets.MYSQLPASS }}
      - EUREKA_HOST=eureka-server
    ports:
      - "3306:3306"
    networks:
      - microservices-net


networks:
  microservices-net:
    driver: bridge
